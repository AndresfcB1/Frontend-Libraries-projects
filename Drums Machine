HTML

<link href="https://fonts.googleapis.com/css?family=Lobster" rel="stylesheet" type="text/css">
<script crossorigin src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>



 
<div id='app'></div>
  
  CSS
  
  

.drum-pad{
     background-color: black;
    color: white;
   
    height: 40px;
    line-height: 40px;
    
    width: 100px;
}
body{
    justify-content: center;
background: linear-gradient(0deg, rgba(34,193,195,1) 0%, rgba(45,133,253,1) 100%);


 text-align:center;
    
}
.title{
   text-align:center;
  color:white;
   

}
p{
  color:red
}

#error{

  font-family: Arial, Helvetica, sans-serif;
    font-weight: bold;

}


JS

const bank = [
  {
    keyCode: 81,
    keyTrigger: 'Q',
    id: 'Heater-1',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'
  },
  {
    keyCode: 87,
    keyTrigger: 'W',
    id: 'Heater-2',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'
  },
  {
    keyCode: 69,
    keyTrigger: 'E',
    id: 'Heater-3',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'
  },
  {
    keyCode: 65,
    keyTrigger: 'A',
    id: 'Heater-4',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'
  },
  {
    keyCode: 83,
    keyTrigger: 'S',
    id: 'Clap',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'
  },
  {
    keyCode: 68,
    keyTrigger: 'D',
    id: 'Open-HH',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'
  },
  {
    keyCode: 90,
    keyTrigger: 'Z',
    id: "Kick-n'-Hat",
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'
  },
  {
    keyCode: 88,
    keyTrigger: 'X',
    id: 'Kick',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'
  },
  {
    keyCode: 67,
    keyTrigger: 'C',
    id: 'Closed-HH',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'
  }
];










class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
    padbank:[...bank]
    }
    this.handleKeyPress = this.handleKeyPress.bind(this);
 
  }
   componentDidMount() {
    document.addEventListener("keydown", this.handleKeyPress);
  }
  componentWillUnmount() {
    document.removeEventListener("keydown", this.handleKeyPress);
  }
  
 
   handleKeyPress(event) {
     try{
     console.log(event.keyCode);
     var t=String.fromCharCode(event.keyCode);
      var f=document.getElementById(t).parentElement;
     this.playSound(t,f.id);
       document.getElementById('error').textContent="";
     }
     catch(error)
       {
           document.getElementById('error').textContent="That letter does not have sound";
             document.getElementById('display').textContent="";
       }
      
    
  }
  

  
  handleChange(e) {
    this.setState({
      markdown: e.target.value
    });
  
  
  }
  render() {
  
   const padbank1=this.state.padbank.map(i=>   
                                         <button>
     <div class='drum-pad' onClick={() => this.playSound(i.keyTrigger,i.id)} id={i.id}  >
          {i.keyTrigger}
                                           
       <audio class='clip' src={i.url} allow='autoplay' id={i.keyTrigger}></audio>
        </div>
     </button>
        );
    return (
  <div id='drum-machine'>
        <div class='title'>
          <h1 id='display'></h1>
          
           <p id='error'></p>
          
          
        </div>
  
       {padbank1}
      
    
      </div>
    );
 
                     
  }
      playSound(key,id) {
        try{
           document.getElementById('display').textContent=id;
        console.log(key)
    const sound = document.getElementById(key);
  sound.play();
          document.getElementById('error').textContent="";
        }
        catch(error)
          {
           document.getElementById('error').textContent="That letter does not have sound";
            document.getElementById('display').textContent="";
          }
   
  }
  };






ReactDOM.render(<App />, document.getElementById('app'));






